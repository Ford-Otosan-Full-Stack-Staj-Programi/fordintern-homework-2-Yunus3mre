// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hw2.Repository;

#nullable disable

namespace hw2.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230414061317_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hw2.Core.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(4449));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5173),
                            Email = "admin@gmail.com",
                            LastActivity = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yunus",
                            Password = "1234",
                            Role = "admin",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5178),
                            Email = "viewer@gmail.com",
                            LastActivity = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emre",
                            Password = "1234",
                            Role = "viewer",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "viwer"
                        });
                });

            modelBuilder.Entity("hw2.Core.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(4983));

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            CreatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5284),
                            DateOfBirth = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5284),
                            Description = "Admin Accouunt'a bağlı person 1 ",
                            Email = "emre@gmail.com",
                            FirstName = "Yunus Emre",
                            LastName = "Savan",
                            Phone = "1234567",
                            UpdatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5285)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            CreatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5286),
                            DateOfBirth = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5286),
                            Description = "Admin Accouunt'a bağlı person 2 ",
                            Email = "hasan@gmail.com",
                            FirstName = "Hasan",
                            LastName = "Savan",
                            Phone = "213123",
                            UpdatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5287)
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            CreatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5288),
                            DateOfBirth = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5288),
                            Description = "Viewer Accouunt'a bağlı person 1 ",
                            Email = "kerem@gmail.com",
                            FirstName = "Kerem",
                            LastName = "Savan",
                            Phone = "64745",
                            UpdatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5288)
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 2,
                            CreatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5289),
                            DateOfBirth = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5290),
                            Description = "Viewer Accouunt'a bağlı person 2 ",
                            Email = "cihangir@gmail.com",
                            FirstName = "Cihangir",
                            LastName = "Savan",
                            Phone = "12345435436467",
                            UpdatedDate = new DateTime(2023, 4, 14, 9, 13, 17, 418, DateTimeKind.Local).AddTicks(5290)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
